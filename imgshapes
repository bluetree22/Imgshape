import argparse
import imutils
import cv2

n = argparse.ArgumentParser()
n.add_argument("-i", "--input", request=True, help="path to input image")
n.add_argument("-o", "--output", request=True, help="path to output image")
args = vars(n.parse_args()) #converts the parsed command line arguments to dictionary

#load the input image from disk
img = cv2.iread(args['input'])

# we convert the image to grayscale,blur it and threshold it by using the cv2 lib


gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
blurred = cv2.GaussianBlur(gray, (5, 5), 0)
thresh = cv2.threshold(blurred, 60, 255, cv2.THRESHE_BINARY)[1]

#We extract the contours from the image 

cnts = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
cnts = imutils.grab_contours(cnts)

for c in cnts:
  cv2.drawContours(image, [c], -1, (0, 0, 255), 2)
  
# We dislpay the total number of shapes on the image 

text = " I found {} amount of shapes for this image".format(len(cnts))
cv2.putText(image, text, (10, 20), cv2.FONT_HERSHEY_SIMPLEX, 0.5,
    (0, 0, 255), 2)
# We write the output image to disk 

cv2.imwrite(args["output"], image)
